<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Mark&#39;s Blog</title>
    <link>http://mlavi.github.io/</link>
    <description>Recent content on Mark&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-ShareAlike 4.0 International License.</copyright>
    <lastBuildDate>Tue, 10 Mar 2015 23:16:27 -0700</lastBuildDate>
    <atom:link href="http://mlavi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>A DevOps Automation State Diagram</title>
      <link>http://mlavi.github.io/post/diagram/</link>
      <pubDate>Tue, 10 Mar 2015 23:16:27 -0700</pubDate>
      
      <guid>http://mlavi.github.io/post/diagram/</guid>
      <description>&lt;p&gt;Two wonderful things today:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;I found exactly the tool I have been looking for over the years!
I used Wikipedia and &lt;a href=&#34;http://alternativeto.net&#34;&gt;alternativeTo&lt;/a&gt; to survey the market for competitors
to my favorite open source object drawing tool, &lt;a href=&#34;https://wiki.gnome.org/Apps/Dia&#34;&gt;Dia&lt;/a&gt;.&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;The following snapshot shows authoring the work-in-progress&amp;hellip;
&lt;img src=&#34;http://mlavi.github.io/img/devops-automation-screenshot.png&#34; alt=&#34;DevOps Automation Diagram&#34; /&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The DevOps mission of reducing friction between the developer&amp;rsquo;s code and deployment to production
is mostly captured by this diagram. It has been in my head for a while, extended past but based on
work with my colleagues at Pertino. It is mostly complete, a bit of an eye-chart, and I want to
improve the flow by reducing crossing lines. Working on this as a state diagram has yielded some
insight into improvements, optimization, and bottlenecks. I plan to release the source file as part
of my infrastructure as code project.&lt;/p&gt;

&lt;p&gt;I made it with &lt;a href=&#34;http://www.plantuml.com/eclipse.html&#34;&gt;PlantUML in Eclipse with GraphViz&lt;/a&gt; with a view
rendering the results on the fly (no need to save) which felt like unit testing my diagram!
This allowed me to iterate frequently with text rather than graphics: brilliant and yet
another example as infrastructure as code. :~) My standby object drawing program, Dia,
would have done the trick as well, perhaps even better from a layout crossing lines perspective,
but re-factoring would have been slower. Re-factoring was key in making improvements and I could
perform analysis on my arrow layout hints, e.g.: &lt;code&gt;$ grep &amp;lsquo;&amp;ndash;&amp;gt;&amp;rsquo; | wc &amp;ndash;lines&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll update with the final product soon: you will be able to view the SVG image in a new browser
window or tab, then scale it to your liking. I&amp;rsquo;m very happy with the results of performing this work
with open source software and formats (currently 45Kb SVG which allows you to copy the text of the
diagram) for flexibility and performance.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>About Mark</title>
      <link>http://mlavi.github.io/about/</link>
      <pubDate>Fri, 06 Mar 2015 14:11:47 -0800</pubDate>
      
      <guid>http://mlavi.github.io/about/</guid>
      <description>&lt;p&gt;Mark first touched the Internet in 1991 when he was sponsored to do undergraduate research.
 After graduation and Internet withdrawal, he joined the first national commercial Internet
 Service Provider (before the world wide web).&lt;/p&gt;

&lt;p&gt;One of the web masters of Netscape, cnnfn.com, and sgi.com, Mark was part of the
 world&amp;rsquo;s largest and earliest media and web sites. Mark progressed to Developer
 Relations, where he became the JavaScript and LDAP Technology Evangelist.
One compliment: &amp;ldquo;Mark is an engineer who can speak&amp;rdquo; captures his ability to relate technical
 subjects to anyone.&lt;/p&gt;

&lt;p&gt;Mark&amp;rsquo;s approach mixes software engineering disciplines with art and operations, embracing
 Internet architecture, real-time media, and the ability to nurture people, developers,
 networks, and systems to work together. His multidisciplinary practice is complimented
 by the term &lt;a href=&#34;https://en.wikipedia.org/wiki/DevOps&#34;&gt;DevOps&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Time for a new development project!</title>
      <link>http://mlavi.github.io/post/first/</link>
      <pubDate>Fri, 06 Mar 2015 14:11:47 -0800</pubDate>
      
      <guid>http://mlavi.github.io/post/first/</guid>
      <description>

&lt;p&gt;Embarking on a new adventure is always the best time in a project because all your dreams
 are possible! You research your ideas, find new tools and libraries, and smell the fresh
 scent of unhindered development.&lt;/p&gt;

&lt;h3 id=&#34;then-you-start:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;Then you start&amp;hellip;&lt;/h3&gt;

&lt;p&gt;You find that your idea is broad and multifaceted, tools are in various states of acceptable
 use and documentation, and there is a bevy of dependencies: each representing a small
 landscape to conquer.&lt;/p&gt;

&lt;h3 id=&#34;to-sink-into-reality:e8fb9c67eba912c72729806db31eaa1b&#34;&gt;&amp;hellip; to sink into reality!&lt;/h3&gt;

&lt;p&gt;The original title of this first post was &amp;ldquo;Time for a new Blog&amp;rdquo; to document my experiment
 with Github Pages, Jekyll, and Hugo: it has been a fascinating study in scope creep.&lt;/p&gt;

&lt;p&gt;But I&amp;rsquo;m prototyping, so it&amp;rsquo;s all good, right?&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ll update later with how I&amp;rsquo;ve navigated the static web site blog quest, thus far it has been an
 exercise in transferring most of the standard content management system functionality into
 smaller tools and libraries which inverts the work flow. I think the journey will be worth
 it because I&amp;rsquo;ve caught glimpses which validate this approach:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I can blog from the command line and presumably anywhere (including my phone) with some setup.&lt;/li&gt;
&lt;li&gt;I can test the build of my content, templates, and enhanced work on those elements.&lt;/li&gt;
&lt;li&gt;Everything under revision control, therefore: blog + content = testable software!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Even though I&amp;rsquo;ve accomplished much with Joomla, WordPress, Drupal, and ModX over the years,
 you inevitably fall out of love after the first month with complex and brittle software.
 Will it happen again?&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>